import React, { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const GameMessenger = () => {
  const [selectedChat, setSelectedChat] = useState(1);
  const [message, setMessage] = useState('');
  const [activeTheme, setActiveTheme] = useState('orange');
  const [activeSection, setActiveSection] = useState('chats');
  const [messagesData, setMessagesData] = useState([
    { id: 1, sender: '–ê–ª–µ–∫—Å', avatar: 'üéØ', text: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞ —Å –Ω–æ–≤–æ–π –∏–≥—Ä–æ–π?', time: '14:20', isMe: false },
    { id: 2, sender: '–í—ã', avatar: 'üöÄ', text: '–û—Ç–ª–∏—á–Ω–æ! –£–∂–µ –ø—Ä–æ—à–µ–ª –ø–µ—Ä–≤—É—é –ª–æ–∫–∞—Ü–∏—é', time: '14:22', isMe: true },
    { id: 3, sender: '–ú–∞—Ä–∏–Ω–∞', avatar: '‚ö°', text: '–ö—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—á–µ—Ç –≤ –∫–æ–æ–ø?', time: '14:25', isMe: false },
    { id: 4, sender: '–í—ã', avatar: 'üöÄ', text: '–î–∞, —è –≥–æ—Ç–æ–≤! –ö–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º?', time: '14:26', isMe: true }
  ]);

  const themes = [
    { id: 'orange', name: 'Fire', colors: 'from-game-orange to-red-500' },
    { id: 'blue', name: 'Ocean', colors: 'from-game-blue to-blue-500' },
    { id: 'purple', name: 'Cosmic', colors: 'from-game-purple to-purple-500' },
    { id: 'dark', name: 'Shadow', colors: 'from-game-dark to-gray-800' }
  ];

  const chats = [
    { id: 1, name: '–ò–≥—Ä–æ–≤–∞—è –ö–æ–º–∞–Ω–¥–∞', avatar: 'üéÆ', lastMessage: '–ì–æ—Ç–æ–≤—ã –∫ —Ä–µ–π–¥—É?', time: '2 –º–∏–Ω', unread: 3, online: true },
    { id: 2, name: '–°—Ç—Ä–∏–º–µ—Ä—ã', avatar: 'üì∫', lastMessage: '–ù–∞—á–∏–Ω–∞–µ–º –≤ 20:00', time: '5 –º–∏–Ω', unread: 0, online: true },
    { id: 3, name: '–ì–∏–ª—å–¥–∏—è –î—Ä–∞–∫–æ–Ω–æ–≤', avatar: 'üêâ', lastMessage: '–ù–æ–≤—ã–π –∏–≤–µ–Ω—Ç –∑–∞–≤—Ç—Ä–∞', time: '1 —á–∞—Å', unread: 1, online: false },
    { id: 4, name: 'Pro Players', avatar: '‚≠ê', lastMessage: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞', time: '2 —á–∞—Å–∞', unread: 0, online: true }
  ];



  const contacts = [
    { id: 1, name: '–ê–ª–µ–∫—Å –ì–µ–π–º–µ—Ä', avatar: 'üéØ', status: '–í –∏–≥—Ä–µ: Cyberpunk 2077', online: true },
    { id: 2, name: '–ú–∞—Ä–∏–Ω–∞ –°—Ç—Ä–∏–º–µ—Ä', avatar: '‚ö°', status: '–°—Ç—Ä–∏–º–∏—Ç –Ω–∞ Twitch', online: true },
    { id: 3, name: '–í–∏–∫—Ç–æ—Ä –ü—Ä–æ', avatar: 'üèÜ', status: '–û—Ç–æ—à–µ–ª', online: false },
    { id: 4, name: '–õ–∏–∑–∞ –ù–æ–≤–∏—á–æ–∫', avatar: 'üåü', status: '–£—á–∏—Ç—Å—è –∏–≥—Ä–∞—Ç—å', online: true }
  ];

  const getCurrentTheme = () => themes.find(t => t.id === activeTheme) || themes[0];

  const handleSendMessage = () => {
    if (message.trim()) {
      const newMessage = {
        id: messagesData.length + 1,
        sender: '–í—ã',
        avatar: 'üöÄ',
        text: message,
        time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' }),
        isMe: true
      };
      setMessagesData([...messagesData, newMessage]);
      setMessage('');
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <div className={`min-h-screen bg-gradient-to-br ${getCurrentTheme().colors} p-4 font-open-sans`}>
      <div className="max-w-7xl mx-auto grid grid-cols-12 gap-6 h-screen">
        
        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <div className="col-span-2">
          <Card className="h-full bg-black/20 backdrop-blur-lg border-white/10">
            <div className="p-6">
              <div className="flex items-center gap-3 mb-8">
                <div className="w-10 h-10 rounded-full game-gradient flex items-center justify-center animate-pulse-glow">
                  <span className="text-white font-bold">GC</span>
                </div>
                <h1 className="text-white font-montserrat font-bold text-xl">Game Chat</h1>
              </div>
              
              <nav className="space-y-2">
                <button 
                  onClick={() => setActiveSection('chats')}
                  className={`nav-item w-full text-left ${activeSection === 'chats' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white'}`}
                >
                  <Icon name="MessageCircle" size={20} />
                  <span>–ß–∞—Ç—ã</span>
                </button>
                <button 
                  onClick={() => setActiveSection('contacts')}
                  className={`nav-item w-full text-left ${activeSection === 'contacts' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white'}`}
                >
                  <Icon name="Users" size={20} />
                  <span>–ö–æ–Ω—Ç–∞–∫—Ç—ã</span>
                </button>
                <button 
                  onClick={() => setActiveSection('profile')}
                  className={`nav-item w-full text-left ${activeSection === 'profile' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white'}`}
                >
                  <Icon name="User" size={20} />
                  <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
                </button>
                <button 
                  onClick={() => setActiveSection('status')}
                  className={`nav-item w-full text-left ${activeSection === 'status' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white'}`}
                >
                  <Icon name="Zap" size={20} />
                  <span>–°—Ç–∞—Ç—É—Å</span>
                </button>
                <button 
                  onClick={() => setActiveSection('settings')}
                  className={`nav-item w-full text-left ${activeSection === 'settings' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white'}`}
                >
                  <Icon name="Settings" size={20} />
                  <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                </button>
              </nav>
            </div>
          </Card>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ */}
        <div className="col-span-3">
          <Card className="h-full bg-black/20 backdrop-blur-lg border-white/10">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-white font-montserrat font-semibold text-lg">
                  {activeSection === 'chats' && '–ß–∞—Ç—ã'}
                  {activeSection === 'contacts' && '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}
                  {activeSection === 'profile' && '–ü—Ä–æ—Ñ–∏–ª—å'}
                  {activeSection === 'status' && '–°—Ç–∞—Ç—É—Å'}
                  {activeSection === 'settings' && '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'}
                </h2>
                <Button size="sm" className="bg-white/10 hover:bg-white/20 text-white border-white/20">
                  <Icon name="Plus" size={16} />
                </Button>
              </div>
              
              {activeSection === 'chats' && (
                <div className="space-y-3">
                  {chats.map((chat) => (
                    <div 
                      key={chat.id}
                      onClick={() => setSelectedChat(chat.id)}
                      className={`chat-item ${selectedChat === chat.id ? 'bg-white/10 border-white/20' : ''}`}
                    >
                    <div className="flex items-center gap-3">
                      <div className="relative">
                        <Avatar className="w-12 h-12">
                          <AvatarFallback className="bg-gradient-to-br from-game-purple to-game-blue text-white text-lg">
                            {chat.avatar}
                          </AvatarFallback>
                        </Avatar>
                        {chat.online && (
                          <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-black animate-pulse"></div>
                        )}
                      </div>
                      
                      <div className="flex-1 min-w-0">
                        <div className="flex items-center justify-between">
                          <h3 className="text-white font-medium truncate">{chat.name}</h3>
                          <span className="text-white/50 text-xs">{chat.time}</span>
                        </div>
                        <p className="text-white/70 text-sm truncate">{chat.lastMessage}</p>
                      </div>
                      
                      {chat.unread > 0 && (
                        <Badge className="bg-game-orange text-white animate-pulse">
                          {chat.unread}
                        </Badge>
                      )}
                    </div>
                  </div>
                ))}
                </div>
              )}

              {activeSection === 'contacts' && (
                <div className="space-y-3">
                  {contacts.map((contact) => (
                    <div key={contact.id} className="flex items-center gap-3 p-4 rounded-xl border border-white/10 hover:bg-white/5 transition-all duration-300 cursor-pointer">
                      <div className="relative">
                        <Avatar className="w-12 h-12">
                          <AvatarFallback className="bg-gradient-to-br from-game-purple to-game-blue text-white text-lg">
                            {contact.avatar}
                          </AvatarFallback>
                        </Avatar>
                        {contact.online && (
                          <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-black animate-pulse"></div>
                        )}
                      </div>
                      <div className="flex-1 min-w-0">
                        <h3 className="text-white font-medium truncate">{contact.name}</h3>
                        <p className="text-white/70 text-sm truncate">{contact.status}</p>
                      </div>
                      <Button size="sm" className="bg-game-orange hover:bg-game-orange/80 text-white">
                        <Icon name="MessageCircle" size={14} />
                      </Button>
                    </div>
                  ))}
                </div>
              )}

              {activeSection === 'profile' && (
                <div className="space-y-6">
                  <div className="text-center">
                    <Avatar className="w-20 h-20 mx-auto mb-4">
                      <AvatarFallback className="bg-gradient-to-br from-game-orange to-game-blue text-white text-2xl">
                        üöÄ
                      </AvatarFallback>
                    </Avatar>
                    <h3 className="text-white font-montserrat font-semibold text-xl">–ò–≥—Ä–æ–∫ Pro</h3>
                    <p className="text-white/70">–í —Å–µ—Ç–∏</p>
                  </div>
                  <div className="space-y-4">
                    <div className="bg-white/10 rounded-lg p-4">
                      <p className="text-white/70 text-sm mb-1">–°—Ç–∞—Ç—É—Å</p>
                      <p className="text-white">–ò–≥—Ä–∞—é –≤ Cyberpunk 2077</p>
                    </div>
                    <div className="bg-white/10 rounded-lg p-4">
                      <p className="text-white/70 text-sm mb-1">–£—Ä–æ–≤–µ–Ω—å</p>
                      <p className="text-white">42 –ª–≤–ª</p>
                    </div>
                    <div className="bg-white/10 rounded-lg p-4">
                      <p className="text-white/70 text-sm mb-1">–û—á–∫–∏ –æ–ø—ã—Ç–∞</p>
                      <p className="text-white">15,847 XP</p>
                    </div>
                  </div>
                </div>
              )}

              {activeSection === 'settings' && (
                <div className="space-y-4">
                  <div className="bg-white/10 rounded-lg p-4">
                    <h4 className="text-white font-medium mb-3">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="text-white/70 text-sm">–ó–≤—É–∫</span>
                        <Button size="sm" variant="outline" className="text-white border-white/20">ON</Button>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-white/70 text-sm">–í–∏–±—Ä–∞—Ü–∏—è</span>
                        <Button size="sm" variant="outline" className="text-white border-white/20">OFF</Button>
                      </div>
                    </div>
                  </div>
                  <div className="bg-white/10 rounded-lg p-4">
                    <h4 className="text-white font-medium mb-3">–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</h4>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="text-white/70 text-sm">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å</span>
                        <Button size="sm" variant="outline" className="text-white border-white/20">ON</Button>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-white/70 text-sm">–û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å</span>
                        <Button size="sm" variant="outline" className="text-white border-white/20">ON</Button>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </Card>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —á–∞—Ç–∞ */}
        <div className="col-span-5">
          <Card className="h-full bg-black/20 backdrop-blur-lg border-white/10 flex flex-col">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
            <div className="p-6 border-b border-white/10">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <Avatar className="w-10 h-10">
                    <AvatarFallback className="bg-gradient-to-br from-game-blue to-game-purple text-white">
                      üéÆ
                    </AvatarFallback>
                  </Avatar>
                  <div>
                    <h3 className="text-white font-medium">–ò–≥—Ä–æ–≤–∞—è –ö–æ–º–∞–Ω–¥–∞</h3>
                    <p className="text-white/70 text-sm">4 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –æ–Ω–ª–∞–π–Ω</p>
                  </div>
                </div>
                <div className="flex gap-2">
                  <Button size="sm" variant="ghost" className="text-white hover:bg-white/10">
                    <Icon name="Phone" size={16} />
                  </Button>
                  <Button size="sm" variant="ghost" className="text-white hover:bg-white/10">
                    <Icon name="Video" size={16} />
                  </Button>
                  <Button size="sm" variant="ghost" className="text-white hover:bg-white/10">
                    <Icon name="MoreVertical" size={16} />
                  </Button>
                </div>
              </div>
            </div>

            {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
            <div className="flex-1 p-6 overflow-y-auto space-y-4">
              {messagesData.map((msg) => (
                <div key={msg.id} className={`flex gap-3 animate-fade-in ${msg.isMe ? 'flex-row-reverse' : ''}`}>
                  <Avatar className="w-8 h-8">
                    <AvatarFallback className="bg-gradient-to-br from-game-orange to-game-blue text-white text-sm">
                      {msg.avatar}
                    </AvatarFallback>
                  </Avatar>
                  <div className={`message-bubble ${msg.isMe 
                    ? 'bg-gradient-to-r from-game-orange to-game-blue text-white' 
                    : 'bg-white/10 text-white'
                  }`}>
                    {!msg.isMe && <p className="text-xs text-white/70 mb-1">{msg.sender}</p>}
                    <p className="text-sm">{msg.text}</p>
                    <p className={`text-xs mt-1 ${msg.isMe ? 'text-white/70' : 'text-white/50'}`}>
                      {msg.time}
                    </p>
                  </div>
                </div>
              ))}
            </div>

            {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
            <div className="p-6 border-t border-white/10">
              <div className="flex gap-3">
                <Button size="sm" variant="ghost" className="text-white hover:bg-white/10">
                  <Icon name="Paperclip" size={16} />
                </Button>
                <Input
                  value={message}
                  onChange={(e) => setMessage(e.target.value)}
                  onKeyPress={handleKeyPress}
                  placeholder="–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                  className="flex-1 bg-white/10 border-white/20 text-white placeholder:text-white/50 focus:border-game-orange"
                />
                <Button size="sm" variant="ghost" className="text-white hover:bg-white/10">
                  <Icon name="Smile" size={16} />
                </Button>
                <Button onClick={handleSendMessage} className="game-button-primary">
                  <Icon name="Send" size={16} />
                </Button>
              </div>
            </div>
          </Card>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="col-span-2">
          <Card className="h-full bg-black/20 backdrop-blur-lg border-white/10">
            <div className="p-6">
              <Tabs defaultValue="themes" className="w-full">
                <TabsList className="grid w-full grid-cols-2 bg-white/10">
                  <TabsTrigger value="themes" className="text-white data-[state=active]:bg-white/20">
                    –¢–µ–º—ã
                  </TabsTrigger>
                  <TabsTrigger value="contacts" className="text-white data-[state=active]:bg-white/20">
                    –õ—é–¥–∏
                  </TabsTrigger>
                </TabsList>
                
                <TabsContent value="themes" className="mt-6 space-y-4">
                  <h3 className="text-white font-medium mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É</h3>
                  <div className="grid grid-cols-2 gap-3">
                    {themes.map((theme) => (
                      <button
                        key={theme.id}
                        onClick={() => setActiveTheme(theme.id)}
                        className={`p-4 rounded-lg bg-gradient-to-br ${theme.colors} text-white font-medium transition-all duration-300 hover:scale-105 ${
                          activeTheme === theme.id ? 'ring-2 ring-white/50' : ''
                        }`}
                      >
                        {theme.name}
                      </button>
                    ))}
                  </div>
                </TabsContent>
                
                <TabsContent value="contacts" className="mt-6 space-y-3">
                  <h3 className="text-white font-medium mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                  {contacts.map((contact) => (
                    <div key={contact.id} className="flex items-center gap-3 p-3 rounded-lg hover:bg-white/10 transition-colors">
                      <div className="relative">
                        <Avatar className="w-10 h-10">
                          <AvatarFallback className="bg-gradient-to-br from-game-purple to-game-blue text-white">
                            {contact.avatar}
                          </AvatarFallback>
                        </Avatar>
                        {contact.online && (
                          <div className="absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border border-black"></div>
                        )}
                      </div>
                      <div className="flex-1 min-w-0">
                        <p className="text-white text-sm font-medium truncate">{contact.name}</p>
                        <p className="text-white/60 text-xs truncate">{contact.status}</p>
                      </div>
                    </div>
                  ))}
                </TabsContent>
              </Tabs>
            </div>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default GameMessenger;